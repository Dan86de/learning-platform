/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as SignUpSplatImport } from './routes/sign-up.$'
import { Route as SignInSplatImport } from './routes/sign-in.$'
import { Route as AuthedCourseImport } from './routes/_authed.course'
import { Route as AuthedAppImport } from './routes/_authed.app'
import { Route as AuthedCourseCourseNameImport } from './routes/_authed.course.$courseName'
import { Route as AuthedAppProfileImport } from './routes/_authed.app.profile'
import { Route as AuthedCourseCourseNameModuleModuleNameImport } from './routes/_authed.course.$courseName_.module.$moduleName'
import { Route as AuthedCourseCourseNameModuleModuleNameLessonLessonNameImport } from './routes/_authed.course.$courseName_.module.$moduleName_.lesson.$lessonName'

// Create/Update Routes

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SignUpSplatRoute = SignUpSplatImport.update({
  id: '/sign-up/$',
  path: '/sign-up/$',
  getParentRoute: () => rootRoute,
} as any)

const SignInSplatRoute = SignInSplatImport.update({
  id: '/sign-in/$',
  path: '/sign-in/$',
  getParentRoute: () => rootRoute,
} as any)

const AuthedCourseRoute = AuthedCourseImport.update({
  id: '/course',
  path: '/course',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAppRoute = AuthedAppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedCourseCourseNameRoute = AuthedCourseCourseNameImport.update({
  id: '/$courseName',
  path: '/$courseName',
  getParentRoute: () => AuthedCourseRoute,
} as any)

const AuthedAppProfileRoute = AuthedAppProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthedAppRoute,
} as any)

const AuthedCourseCourseNameModuleModuleNameRoute =
  AuthedCourseCourseNameModuleModuleNameImport.update({
    id: '/$courseName_/module/$moduleName',
    path: '/$courseName/module/$moduleName',
    getParentRoute: () => AuthedCourseRoute,
  } as any)

const AuthedCourseCourseNameModuleModuleNameLessonLessonNameRoute =
  AuthedCourseCourseNameModuleModuleNameLessonLessonNameImport.update({
    id: '/$courseName_/module/$moduleName_/lesson/$lessonName',
    path: '/$courseName/module/$moduleName/lesson/$lessonName',
    getParentRoute: () => AuthedCourseRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_authed/app': {
      id: '/_authed/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AuthedAppImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/course': {
      id: '/_authed/course'
      path: '/course'
      fullPath: '/course'
      preLoaderRoute: typeof AuthedCourseImport
      parentRoute: typeof AuthedImport
    }
    '/sign-in/$': {
      id: '/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof SignInSplatImport
      parentRoute: typeof rootRoute
    }
    '/sign-up/$': {
      id: '/sign-up/$'
      path: '/sign-up/$'
      fullPath: '/sign-up/$'
      preLoaderRoute: typeof SignUpSplatImport
      parentRoute: typeof rootRoute
    }
    '/_authed/app/profile': {
      id: '/_authed/app/profile'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AuthedAppProfileImport
      parentRoute: typeof AuthedAppImport
    }
    '/_authed/course/$courseName': {
      id: '/_authed/course/$courseName'
      path: '/$courseName'
      fullPath: '/course/$courseName'
      preLoaderRoute: typeof AuthedCourseCourseNameImport
      parentRoute: typeof AuthedCourseImport
    }
    '/_authed/course/$courseName_/module/$moduleName': {
      id: '/_authed/course/$courseName_/module/$moduleName'
      path: '/$courseName/module/$moduleName'
      fullPath: '/course/$courseName/module/$moduleName'
      preLoaderRoute: typeof AuthedCourseCourseNameModuleModuleNameImport
      parentRoute: typeof AuthedCourseImport
    }
    '/_authed/course/$courseName_/module/$moduleName_/lesson/$lessonName': {
      id: '/_authed/course/$courseName_/module/$moduleName_/lesson/$lessonName'
      path: '/$courseName/module/$moduleName/lesson/$lessonName'
      fullPath: '/course/$courseName/module/$moduleName/lesson/$lessonName'
      preLoaderRoute: typeof AuthedCourseCourseNameModuleModuleNameLessonLessonNameImport
      parentRoute: typeof AuthedCourseImport
    }
  }
}

// Create and export the route tree

interface AuthedAppRouteChildren {
  AuthedAppProfileRoute: typeof AuthedAppProfileRoute
}

const AuthedAppRouteChildren: AuthedAppRouteChildren = {
  AuthedAppProfileRoute: AuthedAppProfileRoute,
}

const AuthedAppRouteWithChildren = AuthedAppRoute._addFileChildren(
  AuthedAppRouteChildren,
)

interface AuthedCourseRouteChildren {
  AuthedCourseCourseNameRoute: typeof AuthedCourseCourseNameRoute
  AuthedCourseCourseNameModuleModuleNameRoute: typeof AuthedCourseCourseNameModuleModuleNameRoute
  AuthedCourseCourseNameModuleModuleNameLessonLessonNameRoute: typeof AuthedCourseCourseNameModuleModuleNameLessonLessonNameRoute
}

const AuthedCourseRouteChildren: AuthedCourseRouteChildren = {
  AuthedCourseCourseNameRoute: AuthedCourseCourseNameRoute,
  AuthedCourseCourseNameModuleModuleNameRoute:
    AuthedCourseCourseNameModuleModuleNameRoute,
  AuthedCourseCourseNameModuleModuleNameLessonLessonNameRoute:
    AuthedCourseCourseNameModuleModuleNameLessonLessonNameRoute,
}

const AuthedCourseRouteWithChildren = AuthedCourseRoute._addFileChildren(
  AuthedCourseRouteChildren,
)

interface AuthedRouteChildren {
  AuthedAppRoute: typeof AuthedAppRouteWithChildren
  AuthedCourseRoute: typeof AuthedCourseRouteWithChildren
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedAppRoute: AuthedAppRouteWithChildren,
  AuthedCourseRoute: AuthedCourseRouteWithChildren,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/app': typeof AuthedAppRouteWithChildren
  '/course': typeof AuthedCourseRouteWithChildren
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/app/profile': typeof AuthedAppProfileRoute
  '/course/$courseName': typeof AuthedCourseCourseNameRoute
  '/course/$courseName/module/$moduleName': typeof AuthedCourseCourseNameModuleModuleNameRoute
  '/course/$courseName/module/$moduleName/lesson/$lessonName': typeof AuthedCourseCourseNameModuleModuleNameLessonLessonNameRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/app': typeof AuthedAppRouteWithChildren
  '/course': typeof AuthedCourseRouteWithChildren
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/app/profile': typeof AuthedAppProfileRoute
  '/course/$courseName': typeof AuthedCourseCourseNameRoute
  '/course/$courseName/module/$moduleName': typeof AuthedCourseCourseNameModuleModuleNameRoute
  '/course/$courseName/module/$moduleName/lesson/$lessonName': typeof AuthedCourseCourseNameModuleModuleNameLessonLessonNameRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/app': typeof AuthedAppRouteWithChildren
  '/_authed/course': typeof AuthedCourseRouteWithChildren
  '/sign-in/$': typeof SignInSplatRoute
  '/sign-up/$': typeof SignUpSplatRoute
  '/_authed/app/profile': typeof AuthedAppProfileRoute
  '/_authed/course/$courseName': typeof AuthedCourseCourseNameRoute
  '/_authed/course/$courseName_/module/$moduleName': typeof AuthedCourseCourseNameModuleModuleNameRoute
  '/_authed/course/$courseName_/module/$moduleName_/lesson/$lessonName': typeof AuthedCourseCourseNameModuleModuleNameLessonLessonNameRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/app'
    | '/course'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/app/profile'
    | '/course/$courseName'
    | '/course/$courseName/module/$moduleName'
    | '/course/$courseName/module/$moduleName/lesson/$lessonName'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/app'
    | '/course'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/app/profile'
    | '/course/$courseName'
    | '/course/$courseName/module/$moduleName'
    | '/course/$courseName/module/$moduleName/lesson/$lessonName'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_authed/app'
    | '/_authed/course'
    | '/sign-in/$'
    | '/sign-up/$'
    | '/_authed/app/profile'
    | '/_authed/course/$courseName'
    | '/_authed/course/$courseName_/module/$moduleName'
    | '/_authed/course/$courseName_/module/$moduleName_/lesson/$lessonName'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  SignInSplatRoute: typeof SignInSplatRoute
  SignUpSplatRoute: typeof SignUpSplatRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  SignInSplatRoute: SignInSplatRoute,
  SignUpSplatRoute: SignUpSplatRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/sign-in/$",
        "/sign-up/$"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/app",
        "/_authed/course"
      ]
    },
    "/_authed/app": {
      "filePath": "_authed.app.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/app/profile"
      ]
    },
    "/_authed/course": {
      "filePath": "_authed.course.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/course/$courseName",
        "/_authed/course/$courseName_/module/$moduleName",
        "/_authed/course/$courseName_/module/$moduleName_/lesson/$lessonName"
      ]
    },
    "/sign-in/$": {
      "filePath": "sign-in.$.tsx"
    },
    "/sign-up/$": {
      "filePath": "sign-up.$.tsx"
    },
    "/_authed/app/profile": {
      "filePath": "_authed.app.profile.tsx",
      "parent": "/_authed/app"
    },
    "/_authed/course/$courseName": {
      "filePath": "_authed.course.$courseName.tsx",
      "parent": "/_authed/course"
    },
    "/_authed/course/$courseName_/module/$moduleName": {
      "filePath": "_authed.course.$courseName_.module.$moduleName.tsx",
      "parent": "/_authed/course"
    },
    "/_authed/course/$courseName_/module/$moduleName_/lesson/$lessonName": {
      "filePath": "_authed.course.$courseName_.module.$moduleName_.lesson.$lessonName.tsx",
      "parent": "/_authed/course"
    }
  }
}
ROUTE_MANIFEST_END */
